{"version":3,"sources":["context/AppContextProvider.tsx","components/Header.tsx","components/ItemDetail.tsx","components/Item.tsx","components/Search.tsx","api/index.ts","components/Spinner.tsx","components/ItemList.tsx","components/Main.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ActionTypes","AppContext","createContext","INITIAL_STATE","items","selectedItem","loading","error","reducer","state","action","console","log","type","FETCH_ITEMS","FETCH_ITEMS_FULFILLED","payload","SELECT_ITEM","FETCH_ITEMS_REJECTED","AppContextProvider","children","useReducer","dispatch","Provider","value","Header","style","flex","height","ItemDetail","useState","images","videos","itemMedia","setItemMedia","useContext","useEffect","fetch","data","nasa_id","then","res","json","collection","filter","i","href","endsWith","catch","alert","width","maxWidth","margin","display","flexWrap","Button","variant","color","startIcon","ArrowBack","onClick","justifyContent","minHeight","length","media_type","autoPlay","poster","controls","src","alt","title","center","Date","date_created","toString","description","useStyles","makeStyles","item","alignItems","overflowY","border","borderRadius","background","cursor","Item","classes","className","links","Search","query","setQuery","onSubmit","event","preventDefault","url","actionType","handleApiCall","padding","TextField","label","onChange","target","from","transform","to","spinner","animation","Spinner","props","borderWidth","borderColor","size","itemList","ItemList","setFilter","e","map","Fragment","main","Main","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.34f5a919.chunk.js","sourcesContent":["import { createContext, useReducer } from \"react\";\n\nexport const AppContext = createContext({} as any);\n\nexport enum ActionTypes {\n  FETCH_ITEMS = \"FETCH_ITEMS\",\n  FETCH_ITEMS_FULFILLED = \"FETCH_ITEMS_FULFILLED\",\n  FETCH_ITEMS_REJECTED = \"FETCH_ITEMS_REJECTED\",\n  SELECT_ITEM = \"SELECT_ITEM\"\n}\n\nexport interface AppState {\n  items: any[];\n  selectedItem: any;\n  loading: boolean;\n  error: null;\n}\n\nexport interface Action {\n  type: string;\n  payload?: any;\n}\n\nconst INITIAL_STATE: AppState = {\n  items: [],\n  selectedItem: null,\n  loading: false,\n  error: null\n};\n\nconst reducer = (state: AppState, action: Action) => {\n  console.log(action.type);\n  switch (action.type) {\n    case ActionTypes.FETCH_ITEMS:\n      return { ...state, loading: true };\n    case ActionTypes.FETCH_ITEMS_FULFILLED:\n      return { ...state, items: action.payload, loading: false };\n    case ActionTypes.SELECT_ITEM:\n      return { ...state, selectedItem: action.payload };\n    case ActionTypes.FETCH_ITEMS_REJECTED:\n      return { ...state, loading: false, error: action.payload };\n  }\n  return state;\n};\n\nconst AppContextProvider = ({ children }: any) => {\n  const [state, dispatch] = useReducer(reducer, INITIAL_STATE);\n  return (\n    <AppContext.Provider value={{ state, dispatch }}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport default AppContextProvider;\n","const Header = () => {\n    return <header style={{\n        flex: 1,\n        height: '5rem'\n    }}><h2>NASA Media Search</h2></header>\n}\n\nexport default Header;","import { Button } from \"@material-ui/core\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { ActionTypes, AppContext } from \"../context/AppContextProvider\";\nimport { ArrowBack } from '@material-ui/icons'\n\nconst ItemDetail = () => {\n    const [itemMedia, setItemMedia] = useState<null | any>({\n        images: [],\n        videos: []\n    });\n\n    const {\n        state: { selectedItem },\n        dispatch\n    } = useContext(AppContext);\n\n    useEffect(() => {\n        if (selectedItem) {\n            fetch(\n                `https://images-api.nasa.gov/asset/${selectedItem?.data[0].nasa_id}`\n            )\n                .then((res) => res.json())\n                .then((data) => {\n                    setItemMedia({\n                        images: data.collection.items.filter((i: any) =>\n                            i.href.endsWith(\".jpg\")\n                        ),\n                        videos: data.collection.items.filter((i: any) =>\n                            i.href.endsWith(\".mp4\")\n                        )\n                    });\n                })\n                .catch((error) => {\n                    alert(\"Error fetching media.\");\n                    console.log(error);\n                });\n        }\n    }, [selectedItem, dispatch]);\n\n    return (\n        <div\n            style={{\n                width: \"100%\",\n                maxWidth: \"1200px\",\n                margin: \"auto\",\n                display: \"flex\",\n                flexWrap: \"wrap\"\n            }}\n        >\n            <div>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    startIcon={<ArrowBack />}\n                    style={{ height: \"fit-content\" }}\n                    onClick={() => {\n                        dispatch({ type: ActionTypes.SELECT_ITEM, payload: null });\n                    }}\n                >\n                    Back to search\n          </Button>\n            </div>\n            <div style={{\n                display: 'flex', \n                justifyContent: 'center', \n                margin: 'auto',\n                minHeight: '50vh', \n                width: '100%'}}>\n                {itemMedia?.videos.length &&\n                    selectedItem?.data[0].media_type === \"video\" ? (\n                    <video\n                        autoPlay\n                        width=\"90%\"\n                        poster={itemMedia?.images[0]?.href}\n                        controls\n                    >\n                        <source src={itemMedia?.videos[2]?.href} type=\"video/mp4\" />\n                    </video>\n                ) : (\n                    <img\n                        style={{ maxWidth: \"90%\", minHeight: '100%' }}\n                        src={itemMedia?.images[0]?.href}\n                        alt=\"nasa media\"\n                    />\n                )}\n            </div>\n            <div>\n                <h2>{selectedItem?.data[0].title}</h2>\n                <b>Center: {selectedItem?.data[0].center}</b>\n                <b>\n                    {\" \"}\n              | Date: {new Date(selectedItem?.data[0].date_created).toString()}\n                </b>\n                <p>{selectedItem?.data[0].description}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default ItemDetail;","import {makeStyles} from '@material-ui/core';\n\nconst useStyles = makeStyles({\n    item: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        alignItems: 'center',\n        justifyContent: 'center',\n        overflowY: 'hidden',\n        width: '300px',\n        height: '200px',\n        border: 'solid thin #333',\n        borderRadius: '5px',\n        margin: '5px 3px',\n        background: '#eee',\n        '&:hover': {\n            cursor: 'pointer'\n        }\n    }\n})\n\nconst Item = ({item, onClick}: any) => {\n    const classes = useStyles();\n    return (\n        <div onClick={onClick} className={classes.item}>\n            <h4>{item.data[0].title}</h4>\n            <img width={200} src={item.links[0].href} alt=\"thumb\" />\n        </div>\n\n    )\n}\n\nexport default Item;","import { Button, TextField } from \"@material-ui/core\";\nimport { useContext, useState } from \"react\";\nimport handleApiCall from \"../api\";\nimport { ActionTypes, AppContext } from \"../context/AppContextProvider\";\n\nconst Search = () => {\n  const [query, setQuery] = useState(\"\");\n  const { dispatch } = useContext(AppContext);\n\n  const onQueryChange = ({ target }: any) => {\n    setQuery(target.value);\n  };\n\n  const handleFetch = (event: React.FormEvent<HTMLFormElement>) => {\n\tevent.preventDefault();\n    if (!query) {\n      return;\n    }\n    handleApiCall(\n      `https://images-api.nasa.gov/search?q=${query}`,\n      ActionTypes.FETCH_ITEMS,\n      dispatch\n    );\n  };\n\n  return (\n    <form onSubmit={handleFetch} style={{ width: \"100%\", display: \"flex\", padding: \"1rem 2rem\" }}>\n      <TextField label=\"Search images and videos\" onChange={onQueryChange} style={{ flex: 1 }} />\n      <Button style={{height: 'fit-content'}} variant=\"contained\" color=\"primary\">Search</Button>\n    </form>\n  );\n};\n\nexport default Search;\n","export default function handleApiCall(\n    url: string,\n    actionType: string,\n    dispatch: any\n  ) {\n    dispatch({ type: actionType });\n    fetch(url)\n      .then((res) => res.json())\n      .then((data) => {\n        dispatch({\n          type: actionType + \"_FULFILLED\",\n          payload: data.collection.items.filter((i: any) => !!i.links)\n        });\n      })\n      .catch((error) => {\n        dispatch({ type: actionType + \"_REJECTED\", payload: error });\n      });\n  }\n  ","\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n    '@keyframes spin': {\n        from: {\n            transform: 'rotateZ(0deg)'\n        },\n        to: {\n            transform: 'rotateZ(360deg)'\n        }\n    },\n    spinner: {\n        borderRadius: '50%',\n        animation: '$spin 1s linear infinite'\n    }\n})\n\nconst Spinner = (props: any) => {\n    const classes = useStyles();\n    return <div className={classes.spinner} style={{\n        border: 'solid',\n        borderWidth: props.borderWidth || '.4rem',\n        background: props.background || '#eee',\n        borderColor: props.borderColor || '#00a grey grey grey',\n        width: props.size || '2rem',\n        height: props.size || '2rem'\n    }}></div>\n}\n\nexport default Spinner;","import { makeStyles } from '@material-ui/core';\nimport React, { useContext, useState } from 'react';\nimport { ActionTypes, AppContext } from '../context/AppContextProvider';\nimport Item from './Item';\nimport Search from './Search'\nimport Spinner from './Spinner';\n\nconst useStyles = makeStyles({\n    itemList: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        width: '100%',\n        justifyContent: 'center'\n    }\n})\n\nconst ItemList = () => {\n    const classes = useStyles();\n    const [filter, setFilter] = useState(\"all\");\n\n    const {\n        state: { items, loading },\n        dispatch\n    } = useContext(AppContext);\n\n    return <div className={classes.itemList}>\n        <Search />\n        {loading ? <Spinner/> : \n        <div\n            style={{\n                display: \"flex\",\n                flexWrap: \"wrap\",\n                justifyContent: \"center\"\n            }}\n        >\n            {items.length > 0 ? <div style={{width: '100%', display: 'flex', justifyContent: 'start', padding: '1rem 5rem'}}>\n                <select\n                    style={{ height: \"fit-content\" }}\n                    value={filter}\n                    onChange={(e) => setFilter(e.target.value)}\n                >\n                    <option value=\"all\">All</option>\n                    <option value=\"image\">Images</option>\n                    <option value=\"video\">Videos</option>\n                </select>\n            </div> : <div style={{display: 'flex', height: '40vh', alignItems: 'center'}}>Your search results will show here</div>}\n            {(filter === \"all\"\n                ? items\n                : items.filter((i: any) => i.data[0].media_type === filter)\n            ).map((item: any) => (\n                <React.Fragment key={item.href}>\n                    <Item\n                        onClick={() =>\n                            dispatch({\n                                type: ActionTypes.SELECT_ITEM,\n                                payload: item\n                            })\n                        }\n                        item={item}\n                    />\n                </React.Fragment>\n            ))}\n        </div>}\n    </div>;\n}\n\nexport default ItemList;","import { makeStyles } from \"@material-ui/core\";\nimport { useContext } from \"react\";\nimport { AppContext } from \"../context/AppContextProvider\";\nimport Header from \"./Header\";\nimport ItemDetail from \"./ItemDetail\";\nimport ItemList from \"./ItemList\";\n\nconst useStyles = makeStyles({\n    main: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        width: '90%',\n        maxWidth: '1200px',\n        margin: 'auto'\n    }\n})\n\n\nconst Main = () => {\n    const {state: {selectedItem}} = useContext(AppContext);\n    const classes = useStyles();\n    return (\n        <div className={classes.main}>\n            <Header />\n            {selectedItem ? <ItemDetail /> : <ItemList />}\n        </div>\n    )\n}\n\nexport default Main;","import React from 'react';\nimport './App.css';\nimport Main from './components/Main';\nimport AppContextProvider from './context/AppContextProvider';\n\nfunction App() {\n  return (\n    <AppContextProvider>\n      <div className=\"App\">\n        <Main />\n      </div>\n  </AppContextProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}