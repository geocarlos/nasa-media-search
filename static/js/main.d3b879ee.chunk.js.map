{"version":3,"sources":["context/AppContextProvider.tsx","components/Header.tsx","components/ItemDetail.tsx","components/Item.tsx","components/Search.tsx","api/index.ts","components/Spinner.tsx","components/ItemList.tsx","components/Main.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ActionTypes","AppContext","createContext","INITIAL_STATE","items","selectedItem","loading","error","reducer","state","action","console","log","type","FETCH_ITEMS","FETCH_ITEMS_FULFILLED","payload","SELECT_ITEM","FETCH_ITEMS_REJECTED","AppContextProvider","children","useReducer","dispatch","Provider","value","Header","style","flex","height","ItemDetail","useState","images","videos","itemMedia","setItemMedia","useContext","useEffect","fetch","data","nasa_id","then","res","json","collection","filter","i","href","endsWith","catch","alert","width","maxWidth","margin","display","flexWrap","Button","variant","color","startIcon","ArrowBack","onClick","justifyContent","minHeight","length","media_type","autoPlay","poster","controls","src","alt","title","center","Date","date_created","toString","description","useStyles","makeStyles","item","alignItems","overflowY","border","borderRadius","background","cursor","Item","classes","className","links","Search","query","setQuery","padding","TextField","label","onChange","target","url","actionType","handleApiCall","from","transform","to","spinner","animation","Spinner","props","borderWidth","borderColor","size","itemList","ItemList","setFilter","e","map","Fragment","main","Main","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d3b879ee.chunk.js","sourcesContent":["import { createContext, useReducer } from \"react\";\r\n\r\nexport const AppContext = createContext({} as any);\r\n\r\nexport enum ActionTypes {\r\n  FETCH_ITEMS = \"FETCH_ITEMS\",\r\n  FETCH_ITEMS_FULFILLED = \"FETCH_ITEMS_FULFILLED\",\r\n  FETCH_ITEMS_REJECTED = \"FETCH_ITEMS_REJECTED\",\r\n  SELECT_ITEM = \"SELECT_ITEM\"\r\n}\r\n\r\nexport interface AppState {\r\n  items: any[];\r\n  selectedItem: any;\r\n  loading: boolean;\r\n  error: null;\r\n}\r\n\r\nexport interface Action {\r\n  type: string;\r\n  payload?: any;\r\n}\r\n\r\nconst INITIAL_STATE: AppState = {\r\n  items: [],\r\n  selectedItem: null,\r\n  loading: false,\r\n  error: null\r\n};\r\n\r\nconst reducer = (state: AppState, action: Action) => {\r\n  console.log(action.type);\r\n  switch (action.type) {\r\n    case ActionTypes.FETCH_ITEMS:\r\n      return { ...state, loading: true };\r\n    case ActionTypes.FETCH_ITEMS_FULFILLED:\r\n      return { ...state, items: action.payload, loading: false };\r\n    case ActionTypes.SELECT_ITEM:\r\n      return { ...state, selectedItem: action.payload };\r\n    case ActionTypes.FETCH_ITEMS_REJECTED:\r\n      return { ...state, loading: false, error: action.payload };\r\n  }\r\n  return state;\r\n};\r\n\r\nconst AppContextProvider = ({ children }: any) => {\r\n  const [state, dispatch] = useReducer(reducer, INITIAL_STATE);\r\n  return (\r\n    <AppContext.Provider value={{ state, dispatch }}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AppContextProvider;\r\n","const Header = () => {\r\n    return <header style={{\r\n        flex: 1,\r\n        height: '5rem'\r\n    }}><h2>NASA Media Search</h2></header>\r\n}\r\n\r\nexport default Header;","import { Button } from \"@material-ui/core\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { ActionTypes, AppContext } from \"../context/AppContextProvider\";\r\nimport { ArrowBack } from '@material-ui/icons'\r\n\r\nconst ItemDetail = () => {\r\n    const [itemMedia, setItemMedia] = useState<null | any>({\r\n        images: [],\r\n        videos: []\r\n    });\r\n\r\n    const {\r\n        state: { selectedItem },\r\n        dispatch\r\n    } = useContext(AppContext);\r\n\r\n    useEffect(() => {\r\n        if (selectedItem) {\r\n            fetch(\r\n                `https://images-api.nasa.gov/asset/${selectedItem?.data[0].nasa_id}`\r\n            )\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    setItemMedia({\r\n                        images: data.collection.items.filter((i: any) =>\r\n                            i.href.endsWith(\".jpg\")\r\n                        ),\r\n                        videos: data.collection.items.filter((i: any) =>\r\n                            i.href.endsWith(\".mp4\")\r\n                        )\r\n                    });\r\n                })\r\n                .catch((error) => {\r\n                    alert(\"Error fetching media.\");\r\n                    console.log(error);\r\n                });\r\n        }\r\n    }, [selectedItem, dispatch]);\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                width: \"100%\",\r\n                maxWidth: \"1200px\",\r\n                margin: \"auto\",\r\n                display: \"flex\",\r\n                flexWrap: \"wrap\"\r\n            }}\r\n        >\r\n            <div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<ArrowBack />}\r\n                    style={{ height: \"fit-content\" }}\r\n                    onClick={() => {\r\n                        dispatch({ type: ActionTypes.SELECT_ITEM, payload: null });\r\n                    }}\r\n                >\r\n                    Back to search\r\n          </Button>\r\n            </div>\r\n            <div style={{\r\n                display: 'flex', \r\n                justifyContent: 'center', \r\n                margin: 'auto',\r\n                minHeight: '50vh', \r\n                width: '100%'}}>\r\n                {itemMedia?.videos.length &&\r\n                    selectedItem?.data[0].media_type === \"video\" ? (\r\n                    <video\r\n                        autoPlay\r\n                        width=\"90%\"\r\n                        poster={itemMedia?.images[0]?.href}\r\n                        controls\r\n                    >\r\n                        <source src={itemMedia?.videos[3]?.href} type=\"video/mp4\" />\r\n                    </video>\r\n                ) : (\r\n                    <img\r\n                        style={{ maxWidth: \"90%\", minHeight: '100%' }}\r\n                        src={itemMedia?.images[0]?.href}\r\n                        alt=\"nasa media\"\r\n                    />\r\n                )}\r\n            </div>\r\n            <div>\r\n                <h2>{selectedItem?.data[0].title}</h2>\r\n                <b>Center: {selectedItem?.data[0].center}</b>\r\n                <b>\r\n                    {\" \"}\r\n              | Date: {new Date(selectedItem?.data[0].date_created).toString()}\r\n                </b>\r\n                <p>{selectedItem?.data[0].description}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ItemDetail;","import {makeStyles} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n    item: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        overflowY: 'hidden',\r\n        width: '300px',\r\n        height: '200px',\r\n        border: 'solid thin #333',\r\n        borderRadius: '5px',\r\n        margin: '5px 3px',\r\n        background: '#eee',\r\n        '&:hover': {\r\n            cursor: 'pointer'\r\n        }\r\n    }\r\n})\r\n\r\nconst Item = ({item, onClick}: any) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div onClick={onClick} className={classes.item}>\r\n            <h4>{item.data[0].title}</h4>\r\n            <img width={200} src={item.links[0].href} alt=\"thumb\" />\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Item;","import { Button, TextField } from \"@material-ui/core\";\r\nimport { useContext, useState } from \"react\";\r\nimport handleApiCall from \"../api\";\r\nimport { ActionTypes, AppContext } from \"../context/AppContextProvider\";\r\n\r\nconst Search = () => {\r\n  const [query, setQuery] = useState(\"\");\r\n  const { dispatch } = useContext(AppContext);\r\n\r\n  const onQueryChange = ({ target }: any) => {\r\n    setQuery(target.value);\r\n  };\r\n\r\n  const handleFetch = () => {\r\n    if (!query) {\r\n      return;\r\n    }\r\n    handleApiCall(\r\n      `https://images-api.nasa.gov/search?q=${query}`,\r\n      ActionTypes.FETCH_ITEMS,\r\n      dispatch\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: \"100%\", display: \"flex\", padding: \"1rem 2rem\" }}>\r\n      <TextField label=\"Search images and videos\" onChange={onQueryChange} style={{ flex: 1 }} />\r\n      <Button style={{height: 'fit-content'}} variant=\"contained\" color=\"primary\" onClick={handleFetch}>Search</Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","export default function handleApiCall(\r\n    url: string,\r\n    actionType: string,\r\n    dispatch: any\r\n  ) {\r\n    dispatch({ type: actionType });\r\n    fetch(url)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        dispatch({\r\n          type: actionType + \"_FULFILLED\",\r\n          payload: data.collection.items.filter((i: any) => !!i.links)\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        dispatch({ type: actionType + \"_REJECTED\", payload: error });\r\n      });\r\n  }\r\n  ","\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n    '@keyframes spin': {\r\n        from: {\r\n            transform: 'rotateZ(0deg)'\r\n        },\r\n        to: {\r\n            transform: 'rotateZ(360deg)'\r\n        }\r\n    },\r\n    spinner: {\r\n        borderRadius: '50%',\r\n        animation: '$spin 1s linear infinite'\r\n    }\r\n})\r\n\r\nconst Spinner = (props: any) => {\r\n    const classes = useStyles();\r\n    return <div className={classes.spinner} style={{\r\n        border: 'solid',\r\n        borderWidth: props.borderWidth || '.4rem',\r\n        background: props.background || '#eee',\r\n        borderColor: props.borderColor || '#00a grey grey grey',\r\n        width: props.size || '2rem',\r\n        height: props.size || '2rem'\r\n    }}></div>\r\n}\r\n\r\nexport default Spinner;","import { makeStyles } from '@material-ui/core';\r\nimport React, { useContext, useState } from 'react';\r\nimport { ActionTypes, AppContext } from '../context/AppContextProvider';\r\nimport Item from './Item';\r\nimport Search from './Search'\r\nimport Spinner from './Spinner';\r\n\r\nconst useStyles = makeStyles({\r\n    itemList: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        width: '100%',\r\n        justifyContent: 'center'\r\n    }\r\n})\r\n\r\nconst ItemList = () => {\r\n    const classes = useStyles();\r\n    const [filter, setFilter] = useState(\"all\");\r\n\r\n    const {\r\n        state: { items, loading },\r\n        dispatch\r\n    } = useContext(AppContext);\r\n\r\n    return <div className={classes.itemList}>\r\n        <Search />\r\n        {loading ? <Spinner/> : \r\n        <div\r\n            style={{\r\n                display: \"flex\",\r\n                flexWrap: \"wrap\",\r\n                justifyContent: \"center\"\r\n            }}\r\n        >\r\n            <div style={{width: '100%', display: 'flex', justifyContent: 'start', padding: '1rem 5rem'}}>\r\n                <select\r\n                    style={{ height: \"fit-content\" }}\r\n                    value={filter}\r\n                    onChange={(e) => setFilter(e.target.value)}\r\n                >\r\n                    <option value=\"all\">All</option>\r\n                    <option value=\"image\">Images</option>\r\n                    <option value=\"video\">Videos</option>\r\n                </select>\r\n            </div>\r\n            {(filter === \"all\"\r\n                ? items\r\n                : items.filter((i: any) => i.data[0].media_type === filter)\r\n            ).map((item: any) => (\r\n                <React.Fragment key={item.href}>\r\n                    <Item\r\n                        onClick={() =>\r\n                            dispatch({\r\n                                type: ActionTypes.SELECT_ITEM,\r\n                                payload: item\r\n                            })\r\n                        }\r\n                        item={item}\r\n                    />\r\n                </React.Fragment>\r\n            ))}\r\n        </div>}\r\n    </div>;\r\n}\r\n\r\nexport default ItemList;","import { makeStyles } from \"@material-ui/core\";\r\nimport { useContext } from \"react\";\r\nimport { AppContext } from \"../context/AppContextProvider\";\r\nimport Header from \"./Header\";\r\nimport ItemDetail from \"./ItemDetail\";\r\nimport ItemList from \"./ItemList\";\r\nimport Spinner from \"./Spinner\";\r\n\r\nconst useStyles = makeStyles({\r\n    main: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'center',\r\n        width: '90%',\r\n        maxWidth: '1200px',\r\n        margin: 'auto'\r\n    }\r\n})\r\n\r\n\r\nconst Main = () => {\r\n    const {state: {selectedItem}} = useContext(AppContext);\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.main}>\r\n            <Header />\r\n            {selectedItem ? <ItemDetail /> : <ItemList />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport './App.css';\r\nimport Main from './components/Main';\r\nimport AppContextProvider from './context/AppContextProvider';\r\n\r\nfunction App() {\r\n  return (\r\n    <AppContextProvider>\r\n      <div className=\"App\">\r\n        <Main />\r\n      </div>\r\n  </AppContextProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}